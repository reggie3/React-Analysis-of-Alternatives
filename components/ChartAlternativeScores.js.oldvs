import rd3 from 'rd3';
import React, {Component} from 'react';
import {VictoryBar, VictoryChart, VictoryGroup, VictoryAxis} from 'victory';

class ChartAlternativeScores extends Component {
    constructor(props, context) {
        super(props, context);
        this.state = {
            dataGroups: [],
            labels: [],
            alternativeLabels: []
        }
    }


    /*componentWillMount() {
        this.transformData(this.props.criteria, this.props.alternatives,
            this.props.scores, this.props.graphName);
    }*/

    componentWillReceiveProps(nextProps) {
        this.transformData(nextProps.criteria, nextProps.alternatives,
            nextProps.scores, nextProps.graphName);
    }

    transformData(criteria, alternatives, scores, title) {
        // create scores object
        // group the alternatives by criteron
        let dataGroups = [];
        let labels = [];
        criteria.forEach(function (criterion) {
            labels.push(criterion.name);
            criterion.id;
            let dataGroup = [];
            alternatives.forEach(function (alternative) {
                console.log("alt: " + alternative.id + " : crit: " 
                    + criterion.id + " => score: " +  scores[alternative.id][criterion.id]);

                dataGroup.push({
                    alternativeName: alternative.name,
                    score: scores[alternative.id][criterion.id]
                })
            }, this);
            dataGroups.push(dataGroup);
        }, this);


        this.setState({
            dataGroups: dataGroups,
            labels: labels
        });
    }

    render() {
        return (
            <div>
                <h3 className="chartTitle">{this.props.graphName}</h3>

                
                    <VictoryChart
                    width={500}
                    height={300}
                    offset={20}
                    colorScale={"qualitative"}

                >
                   
                    <VictoryGroup
                        width={500}
                        height={300}
                        offset={20}
                        colorScale={"qualitative"}
                        
                    >

                    {
                        this.state.dataGroups.map((dataGroup, index) => {
                            return <VictoryBar
                                key={index}
                                data={dataGroup}
                                x={"alternativeName"}
                                y={"score"}
                                />
                        })
                    }
                    </VictoryGroup>
                </VictoryChart>
            


            </div>
        )
    }
}

export default ChartAlternativeScores;